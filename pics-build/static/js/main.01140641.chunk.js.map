{"version":3,"sources":["Components/SearchBar.js","Components/ImageCard.js","Components/ImageList.js","api/unsplash.js","Components/App.js","index.js"],"names":["SearchBar","state","term","onFormSubmit","e","preventDefault","props","onSubmit","className","this","type","value","onChange","setState","target","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","images","map","key","id","axios","create","baseURL","headers","Authorization","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","querySelector"],"mappings":"sPA4BeA,E,4MAzBXC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAACC,GACZA,EAAEC,iBAEF,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,uDAG1B,IAAD,OACJ,OACI,yBAAKM,UAAU,cACX,0BAAMA,UAAU,UAAUD,SAAUE,KAAKN,cACrC,yBAAKK,UAAU,SACX,+CACA,2BACIE,KAAK,OACLC,MAAOF,KAAKR,MAAMC,KAClBU,SAAU,SAACR,GAAD,OAAO,EAAKS,SAAS,CAAEX,KAAME,EAAEU,OAAOH,kB,GAlBpDI,IAAMC,WCgCfC,G,wDA/BX,WAAYX,GAAO,IAAD,8BACd,cAAMA,IAWVY,SAAW,WACP,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAE/BC,EAAQC,KAAKC,KAAKN,EAAS,GAAK,GAEtC,EAAKN,SAAS,CAACU,WAdf,EAAKtB,MAAQ,CAACsB,MAAO,GAErB,EAAKH,SAASL,IAAMW,YALN,E,gEASdjB,KAAKW,SAASC,QAAQM,iBAAiB,OAAQlB,KAAKS,Y,+BAW9C,IAAD,EACyBT,KAAKH,MAAMsB,MAAjCC,EADH,EACGA,YAAaC,EADhB,EACgBA,KAErB,OACI,yBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUvB,KAAKR,MAAMsB,SACzC,yBAAKU,IAAKxB,KAAKW,SAAUc,IAAKL,EAAaM,IAAKL,EAAKM,e,GA1B7CrB,IAAMC,YCUfqB,EARG,SAAA/B,GACd,IAAMgC,EAAShC,EAAMgC,OAAOC,KAAI,SAACX,GAC7B,OAAO,kBAAC,EAAD,CAAWY,IAAKZ,EAAMa,GAAIb,MAAOA,OAG5C,OAAO,yBAAKpB,UAAU,cAAc8B,I,QCPzBI,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,2BAETC,QAAS,CACLC,cAAe,2DCuBRC,E,4MAtBX9C,MAAQ,CAAEqC,OAAQ,I,EAElBU,e,uCAAiB,WAAO9C,GAAP,eAAA+C,EAAA,sEACUC,EACtBC,IAAI,iBAAkB,CACnBC,OAAQ,CAAEC,MAAOnD,KAHR,OACPoD,EADO,OAMb,EAAKzC,SAAS,CAAEyB,OAAQgB,EAASC,KAAKC,UANzB,2C,6GAWb,OACI,yBAAKhD,UAAU,eAAeuB,MAAO,CAAE0B,UAAW,SAC9C,kBAAC,EAAD,CAAWlD,SAAUE,KAAKuC,iBAC1B,kBAAC,EAAD,CAAWV,OAAQ7B,KAAKR,MAAMqC,c,GAjB5BvB,IAAMC,WCFxB0C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.01140641.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SearchBar extends React.Component{\r\n    state = { term: '' };\r\n\r\n    onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.onSubmit(this.state.term);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"ui segment\">\r\n                <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                    <div className=\"field\">\r\n                        <label>Image Search</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            value={this.state.term} \r\n                            onChange={(e) => this.setState({ term: e.target.value })} />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar; ","import React from 'react';\r\n\r\nclass ImageCard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {spans: 0};\r\n\r\n        this.imageRef=React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.imageRef.current.addEventListener('load', this.setSpans);\r\n    }\r\n\r\n    setSpans = () => {\r\n        const height = this.imageRef.current.clientHeight;\r\n\r\n        const spans = Math.ceil(height / 10 + 1);\r\n\r\n        this.setState({spans});\r\n    }\r\n\r\n    render() {\r\n        const { description, urls } = this.props.image;\r\n\r\n        return(\r\n            <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\r\n                <img ref={this.imageRef} alt={description} src={urls.regular} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImageCard;\r\n","import React from 'react';\r\nimport './ImageList.css';\r\nimport ImageCard from './ImageCard';\r\n\r\nconst ImageList = props => {\r\n    const images = props.images.map((image) => {\r\n        return <ImageCard key={image.id} image={image} />\r\n    })\r\n\r\n    return <div className=\"image-list\">{images}</div>\r\n}\r\n\r\nexport default ImageList;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.unsplash.com',\r\n\r\n    headers: {\r\n        Authorization: 'Client-ID T5ax0m9ec98zEghP44zoN2-TVO14xmNqmlyXJy0862I'\r\n    }\r\n});\r\n","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport ImageList from './ImageList';\r\nimport unsplash from '../api/unsplash';\r\n\r\n\r\nclass App extends React.Component {\r\n    state = { images: [] };\r\n\r\n    onSearchSubmit = async (term) => {\r\n        const response = await unsplash\r\n        .get('/search/photos', {\r\n            params: { query: term}\r\n        });\r\n\r\n        this.setState({ images: response.data.results });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui container\" style={{ marginTop: '15px' }}>\r\n                <SearchBar onSubmit={this.onSearchSubmit} />\r\n                <ImageList images={this.state.images} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}